울회사 인터넷pc 코드 옮기기용임


"Multiple Imputation for Nonresponse in Surveys" by Donald B. Rubin: 이 책에서 Rubin은 단순히 평균값 등으로 대체하는 방법보다 다중 대체법의 우월성을 강조합니다. 이는 상당히 높은 비율의 결손값(예를 들어 20~40%)에 대해서도 유효



from missingpy import MissForest
import numpy as np
from scipy.stats import chi2

def littles_mcar_test(data):
    data = data.copy()
    data['nullity'] = data.isnull().apply(sum, axis=1)
    
    cols = data.columns.tolist()
    cols.remove('nullity')
    
    observed = []
    expected = []
    
    for col in cols:
        observed += [data.loc[data[col].isna(), 'nullity'].tolist()]
        expected += [data.loc[data[col].notna(), 'nullity'].tolist()]
        
    observed = np.concatenate(observed)
    expected = np.concatenate(expected)
    
    chi_square_statistic = ((observed - expected)**2 / expected).sum()
    
    df = (data.shape[1] - 1) * (data['nullity'].nunique() - 1)
    
    p_value = 1 - chi2.cdf(chi_square_statistic, df)

return p_value

# 사용 예시:
p_value = littles_mcar_test(your_dataframe)








import fileinput
import sys

filename = "/usr/local/lib/python3.x/dist-packages/missingpy/utils.py"
# 위 경로는 실제 missingpy 패키지가 설치된 위치에 따라 다를 수 있습니다.
# 적절한 경로로 변경해주세요.

with fileinput.FileInput(filename, inplace=True) as file:
    for line in file:
        print(line.replace("from sklearn.neighbors.base import NeighborsBase, KNeighborsMixin",
                            "from sklearn.neighbors import NeighborsBase, KNeighborsMixin"), end='')







import pandas as pd
import numpy as np

def test_mcar(df):
    # 결측 여부를 나타내는 새로운 데이터 프레임 생성
    df_nan = df.isnull().astype(int)
    
    # 모든 변수들 사이의 상관 계수 계산
    corr_matrix = df_nan.corr().abs()

    # 대각선 요소 제거
    for x in range(len(corr_matrix )):
        corr_matrix.iloc[x,x] = 0

    # 상관 계수가 유의미하게 큰 경우가 있는지 확인
    return corr_matrix.max().max()

# 사용 예시:
max_corr = test_mcar(your_dataframe)
if max_corr < 0.05:  # 임곗값은 실험적으로 설정해야 합니다.
    print("Data is likely MCAR")
else:
    print("Data is likely MAR or NMAR")


